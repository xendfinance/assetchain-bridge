/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeFactory, BridgeFactoryInterface } from "../BridgeFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAssist",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "BridgeAssistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADD_REMOVE_LIMIT_PER_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
    ],
    name: "addBridgeAssists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeAssistImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAssistImplementation_",
        type: "address",
      },
    ],
    name: "changeBridgeAssistImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "limitPerSend",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "feeWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feeSend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeFulfill",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "relayers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "relayerConsensusThreshold",
        type: "uint256",
      },
    ],
    name: "createBridgeAssist",
    outputs: [
      {
        internalType: "address",
        name: "bridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getBridgeByToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getBridgesByToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getBridgesByTokenLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCreatedBridgeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bridgeAssist",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct BridgeFactory.BridgeAssistInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getCreatedBridgesInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bridgeAssist",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct BridgeFactory.BridgeAssistInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreatedBridgesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAssistImplementation_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "bridges",
        type: "address[]",
      },
    ],
    name: "removeBridgeAssists",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611fe7806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639c96a249116100b8578063b7109c371161007c578063b7109c37146102bc578063d547741f146102dc578063db04fbef146102ef578063ecf103e0146102f7578063f5aa45ee1461030a578063ff8d07601461031257600080fd5b80639c96a2491461025b5780639e6cbec71461026e578063a217fddf1461028e578063a2a2b13114610296578063b2860278146102a957600080fd5b8063485cc955116100ff578063485cc955146101d057806353491e6b146101e35780635c8c9435146101f65780638aeda25a1461022157806391d148541461024857600080fd5b806301ffc9a71461013c578063248a9ca3146101645780632f2ff15d1461019557806336568abe146101aa57806341a712c4146101bd575b600080fd5b61014f61014a3660046118fb565b610332565b60405190151581526020015b60405180910390f35b610187610172366004611925565b60009081526065602052604090206001015490565b60405190815260200161015b565b6101a86101a336600461195e565b610369565b005b6101a86101b836600461195e565b610393565b6101a86101cb366004611a46565b610416565b6101a86101de366004611a83565b6106df565b6101a86101f1366004611ab1565b6108b1565b610209610204366004611ace565b610935565b6040516001600160a01b03909116815260200161015b565b6101877f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b61014f61025636600461195e565b610a6a565b610187610269366004611ab1565b610a95565b61028161027c366004611925565b610ab6565b60405161015b9190611b6a565b610187600081565b609754610209906001600160a01b031681565b6102096102b7366004611b8e565b610baf565b6102cf6102ca366004611bba565b610c85565b60405161015b9190611c33565b6101a86102ea36600461195e565b610e39565b610187606481565b6101a8610305366004611a46565b610e5e565b610187611088565b610325610320366004611c46565b611099565b60405161015b9190611c68565b60006001600160e01b03198216637965db0b60e01b148061036357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546103848161126f565b61038e838361127c565b505050565b6001600160a01b03811633146104085760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104128282611302565b5050565b60006104218161126f565b815160008190036104685760405162461bcd60e51b81526020600482015260116024820152705a65726f206c656e67746820617272617960781b60448201526064016103ff565b60648111156104b95760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774682065786365656473206c696d697400000000000060448201526064016103ff565b60005b818110156106d95760006001600160a01b03168482815181106104e1576104e1611ccb565b60200260200101516001600160a01b0316036105365761050081611369565b6040516020016105109190611d05565b60408051601f198184030181529082905262461bcd60e51b82526103ff91600401611d4a565b61056384828151811061054b5761054b611ccb565b602002602001015160986113fc90919063ffffffff16565b6105805761057081611369565b6040516020016105109190611d7d565b600084828151811061059457610594611ccb565b60200260200101516001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190611dc2565b90506001600160a01b0381166106265761061682611369565b6040516020016105109190611ddf565b61067685838151811061063b5761063b611ccb565b6020026020010151609a6000846001600160a01b03166001600160a01b031681526020019081526020016000206113fc90919063ffffffff16565b50806001600160a01b031685838151811061069357610693611ccb565b60200260200101516001600160a01b03167f7e47dab8afa7341cd3e835154f5aa693e96117bd5545f06c075601c0559e069760405160405180910390a3506001016104bc565b50505050565b600054610100900460ff16158080156106ff5750600054600160ff909116105b806107195750303b158015610719575060005460ff166001145b61077c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103ff565b6000805460ff19166001179055801561079f576000805461ff0019166101001790555b6001600160a01b0383166107f55760405162461bcd60e51b815260206004820152601a60248201527f42525f415353545f494d504c3a207a65726f206164647265737300000000000060448201526064016103ff565b6001600160a01b0382166108415760405162461bcd60e51b81526020600482015260136024820152724f776e65723a207a65726f206164647265737360681b60448201526064016103ff565b609780546001600160a01b0319166001600160a01b03851617905561086760008361127c565b801561038e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108bc8161126f565b6001600160a01b0382166109125760405162461bcd60e51b815260206004820152601a60248201527f42525f415353545f494d504c3a207a65726f206164647265737300000000000060448201526064016103ff565b50609780546001600160a01b0319166001600160a01b0392909216919091179055565b60007f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f6109618161126f565b609754610976906001600160a01b0316611411565b604051633406c17560e11b81529092506001600160a01b0383169063680d82ea906109b3908d908d908d908d908d908d908d908d90600401611e24565b600060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b505050506109f98260986113fc90919063ffffffff16565b506001600160a01b038a166000908152609a60205260409020610a1c90836113fc565b50896001600160a01b0316826001600160a01b03167fd9cba6538dbfc3bc2cfefe73c785f6a1a4c50e780195c79d86688d8f6a6da23460405160405180910390a35098975050505050505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0381166000908152609a60205260408120610363906114ab565b6040805180820190915260008082526020820152610ad460986114ab565b8210610b125760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016103ff565b6000610b1f6098846114b5565b90506040518060400160405280826001600160a01b03168152602001826001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d9190611dc2565b6001600160a01b031690529392505050565b60006001600160a01b038316610bfd5760405162461bcd60e51b8152602060048201526013602482015272546f6b656e3a207a65726f206164647265737360681b60448201526064016103ff565b6001600160a01b0383166000908152609a60205260409020610c1e906114ab565b8210610c5c5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064016103ff565b6001600160a01b0383166000908152609a60205260409020610c7e90836114b5565b9392505050565b60606001600160a01b038416610cd35760405162461bcd60e51b8152602060048201526013602482015272546f6b656e3a207a65726f206164647265737360681b60448201526064016103ff565b81600003610d115760405162461bcd60e51b815260206004820152600b60248201526a4c696d69743a207a65726f60a81b60448201526064016103ff565b6001600160a01b0384166000908152609a60205260409020610d32906114ab565b610d3c8385611e9a565b1115610d815760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081bd9999cd95d0b5b1a5b5a5d60621b60448201526064016103ff565b60008267ffffffffffffffff811115610d9c57610d9c61198e565b604051908082528060200260200182016040528015610dc5578160200160208202803683370190505b50905060005b83811015610e3057610dfe610de08683611e9a565b6001600160a01b0388166000908152609a60205260409020906114b5565b828281518110610e1057610e10611ccb565b6001600160a01b0390921660209283029190910190910152600101610dcb565b50949350505050565b600082815260656020526040902060010154610e548161126f565b61038e8383611302565b6000610e698161126f565b81516000819003610eb05760405162461bcd60e51b81526020600482015260116024820152705a65726f206c656e67746820617272617960781b60448201526064016103ff565b6064811115610f015760405162461bcd60e51b815260206004820152601a60248201527f4172726179206c656e6774682065786365656473206c696d697400000000000060448201526064016103ff565b60005b818110156106d957610f39848281518110610f2157610f21611ccb565b602002602001015160986114c190919063ffffffff16565b610f5657610f4681611369565b6040516020016105109190611ead565b6000848281518110610f6a57610f6a611ccb565b60200260200101516001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd39190611dc2565b9050611025858381518110610fea57610fea611ccb565b6020026020010151609a6000846001600160a01b03166001600160a01b031681526020019081526020016000206114c190919063ffffffff16565b50806001600160a01b031685838151811061104257611042611ccb565b60200260200101516001600160a01b03167f2615a9e874c601a8e854f4d4e70c6f9834de146d18f20aa54ae12c69c37a2ff760405160405180910390a350600101610f04565b600061109460986114ab565b905090565b6060816000036110d95760405162461bcd60e51b815260206004820152600b60248201526a4c696d69743a207a65726f60a81b60448201526064016103ff565b6110e360986114ab565b6110ed8385611e9a565b11156111325760405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081bd9999cd95d0b5b1a5b5a5d60621b60448201526064016103ff565b60008267ffffffffffffffff81111561114d5761114d61198e565b60405190808252806020026020018201604052801561119257816020015b604080518082019091526000808252602082015281526020019060019003908161116b5790505b50905060005b838110156112675760006111b76111af8784611e9a565b6098906114b5565b90506040518060400160405280826001600160a01b03168152602001826001600160a01b03166382bfefc86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112359190611dc2565b6001600160a01b031681525083838151811061125357611253611ccb565b602090810291909101015250600101611198565b509392505050565b61127981336114d6565b50565b6112868282610a6a565b6104125760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556112be3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61130c8282610a6a565b156104125760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6060600061137683611509565b600101905060008167ffffffffffffffff8111156113965761139661198e565b6040519080825280601f01601f1916602001820160405280156113c0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846113ca57509392505050565b6000610c7e836001600160a01b0384166115e1565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b0381166114a65760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016103ff565b919050565b6000610363825490565b6000610c7e8383611630565b6000610c7e836001600160a01b03841661165a565b6114e08282610a6a565b610412576114ed8161174d565b6114f883602061175f565b604051602001610510929190611ee5565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115485772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611574576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061159257662386f26fc10000830492506010015b6305f5e10083106115aa576305f5e100830492506008015b61271083106115be57612710830492506004015b606483106115d0576064830492506002015b600a83106103635760010192915050565b600081815260018301602052604081205461162857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610363565b506000610363565b600082600001828154811061164757611647611ccb565b9060005260206000200154905092915050565b6000818152600183016020526040812054801561174357600061167e600183611f5a565b855490915060009061169290600190611f5a565b90508181146116f75760008660000182815481106116b2576116b2611ccb565b90600052602060002001549050808760000184815481106116d5576116d5611ccb565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061170857611708611f6d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610363565b6000915050610363565b60606103636001600160a01b03831660145b6060600061176e836002611f83565b611779906002611e9a565b67ffffffffffffffff8111156117915761179161198e565b6040519080825280601f01601f1916602001820160405280156117bb576020820181803683370190505b509050600360fc1b816000815181106117d6576117d6611ccb565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061180557611805611ccb565b60200101906001600160f81b031916908160001a9053506000611829846002611f83565b611834906001611e9a565b90505b60018111156118ac576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061186857611868611ccb565b1a60f81b82828151811061187e5761187e611ccb565b60200101906001600160f81b031916908160001a90535060049490941c936118a581611f9a565b9050611837565b508315610c7e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103ff565b60006020828403121561190d57600080fd5b81356001600160e01b031981168114610c7e57600080fd5b60006020828403121561193757600080fd5b5035919050565b6001600160a01b038116811461127957600080fd5b80356114a68161193e565b6000806040838503121561197157600080fd5b8235915060208301356119838161193e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119b557600080fd5b8135602067ffffffffffffffff808311156119d2576119d261198e565b8260051b604051601f19603f830116810181811084821117156119f7576119f761198e565b604052938452858101830193838101925087851115611a1557600080fd5b83870191505b84821015611a3b57611a2c82611953565b83529183019190830190611a1b565b979650505050505050565b600060208284031215611a5857600080fd5b813567ffffffffffffffff811115611a6f57600080fd5b611a7b848285016119a4565b949350505050565b60008060408385031215611a9657600080fd5b8235611aa18161193e565b915060208301356119838161193e565b600060208284031215611ac357600080fd5b8135610c7e8161193e565b600080600080600080600080610100898b031215611aeb57600080fd5b8835611af68161193e565b9750602089013596506040890135611b0d8161193e565b9550606089013594506080890135935060a0890135611b2b8161193e565b925060c089013567ffffffffffffffff811115611b4757600080fd5b611b538b828c016119a4565b92505060e089013590509295985092959890939650565b60408101610363828480516001600160a01b03908116835260209182015116910152565b60008060408385031215611ba157600080fd5b8235611bac8161193e565b946020939093013593505050565b600080600060608486031215611bcf57600080fd5b8335611bda8161193e565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015611c285781516001600160a01b031687529582019590820190600101611c03565b509495945050505050565b602081526000610c7e6020830184611bef565b60008060408385031215611c5957600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611cbe57611cae84835180516001600160a01b03908116835260209182015116910152565b9284019290850190600101611c85565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015611cfc578181015183820152602001611ce4565b50506000910152565b7f427269646765207a65726f206164647265737320617420696e6465783a200000815260008251611d3d81601e850160208701611ce1565b91909101601e0192915050565b6020815260008251806020840152611d69816040850160208701611ce1565b601f01601f19169190910160400192915050565b7f427269646765206475706c696361746520617420696e6465783a200000000000815260008251611db581601b850160208701611ce1565b91909101601b0192915050565b600060208284031215611dd457600080fd5b8151610c7e8161193e565b7f546f6b656e207a65726f206164647265737320617420696e6465783a20000000815260008251611e1781601d850160208701611ce1565b91909101601d0192915050565b6001600160a01b0389811682526020820189905287811660408301526060820187905260808201869052841660a082015261010060c08201819052600090611e6e83820186611bef565b9150508260e08301529998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561036357610363611e84565b7f427269646765206e6f7420666f756e6420617420696e6465783a200000000000815260008251611db581601b850160208701611ce1565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611f1d816017850160208801611ce1565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f4e816028840160208801611ce1565b01602801949350505050565b8181038181111561036357610363611e84565b634e487b7160e01b600052603160045260246000fd5b808202811582820484141761036357610363611e84565b600081611fa957611fa9611e84565b50600019019056fea26469706673582212208cc7dc9b6750987e670e125257c6216cc46e9ebb537b90eb8ed1a8d7e1100d8d64736f6c63430008120033";

export class BridgeFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeFactory> {
    return super.deploy(overrides || {}) as Promise<BridgeFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeFactory {
    return super.attach(address) as BridgeFactory;
  }
  connect(signer: Signer): BridgeFactory__factory {
    return super.connect(signer) as BridgeFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFactoryInterface {
    return new utils.Interface(_abi) as BridgeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFactory {
    return new Contract(address, _abi, signerOrProvider) as BridgeFactory;
  }
}
